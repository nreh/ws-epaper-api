/**
 * This file was generated automatically using scripts/fontmaking/Images2FontHeaders.py
 *
 * Font: Dina Italic Bold
 * Font Size: 9pt
 * Generated On: 13 October 2024 @ 7:57 PM
 *
 * License:
 *
 * Copyright (c) 2005-2013 Joergen Ibsen
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

#pragma once

#include "AbstractFont.h"

#include <vector>

namespace epaperapi::fonts {
class DinaItalicBold_9pt : public AbstractFont {
  private:
    const std::string charset =
        "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~ ";

  public:
    DinaItalicBold_9pt() {}
    uint8_t GetFontSize() const override { return 9; }
    uint8_t GetHeight() const override { return 15; }
    std::string GetFontName() override { return "Dina Italic Bold"; }
    std::string GetCharacterSet() const override { return charset; }
    const uint8_t* GetBitmapData() const override { return bitmap.data(); }
    const uint8_t* GetCharacterWidths() const override { return charWidths.data(); }

  private:
    const std::vector<uint8_t> charWidths = {7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                             7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                             7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                             7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7};

    const std::vector<uint8_t> bitmap = {
        0,   0,   243, 54,  237, 245, 235, 237, 153, 192, 0,   0,   0,   0,   0,   0,   48,  227, 205, 134, 12,  48,  99,
        240, 0,   0,   0,   0,   0,   0,   113, 176, 97,  134, 24,  97,  131, 224, 0,   0,   0,   0,   0,   0,   113, 176,
        97,  134, 6,   13,  177, 192, 0,   0,   0,   0,   0,   0,   24,  113, 230, 219, 102, 254, 48,  96,  0,   0,   0,
        0,   0,   0,   249, 131, 12,  30,  6,   13,  177, 192, 0,   0,   0,   0,   0,   0,   56,  195, 12,  30,  102, 205,
        177, 192, 0,   0,   0,   0,   0,   1,   248, 48,  195, 12,  48,  97,  131, 0,   0,   0,   0,   0,   0,   0,   113,
        182, 109, 142, 54,  205, 177, 192, 0,   0,   0,   0,   0,   0,   113, 182, 108, 217, 158, 12,  49,  192, 0,   0,
        0,   0,   0,   0,   0,   3,   129, 143, 54,  205, 177, 224, 0,   0,   0,   0,   0,   96,  193, 131, 141, 155, 54,
        217, 179, 192, 0,   0,   0,   0,   0,   0,   0,   3,   141, 152, 96,  193, 177, 192, 0,   0,   0,   0,   0,   12,
        24,  51,  205, 155, 118, 217, 177, 224, 0,   0,   0,   0,   0,   0,   0,   3,   141, 155, 126, 193, 177, 192, 0,
        0,   0,   0,   0,   28,  96,  199, 198, 12,  24,  96,  193, 128, 0,   0,   0,   0,   0,   0,   0,   1,   199, 155,
        54,  205, 177, 224, 195, 6,   56,  0,   0,   96,  193, 135, 141, 155, 54,  217, 179, 96,  0,   0,   0,   0,   0,
        24,  48,  3,   131, 6,   24,  48,  97,  224, 0,   0,   0,   0,   0,   24,  48,  7,   131, 6,   12,  48,  96,  193,
        142, 0,   0,   0,   0,   96,  193, 134, 108, 219, 60,  241, 179, 48,  0,   0,   0,   0,   0,   112, 96,  195, 6,
        12,  24,  96,  193, 192, 0,   0,   0,   0,   0,   0,   0,   6,   207, 223, 234, 205, 155, 48,  0,   0,   0,   0,
        0,   0,   0,   7,   141, 155, 54,  217, 179, 96,  0,   0,   0,   0,   0,   0,   0,   3,   141, 155, 102, 217, 177,
        192, 0,   0,   0,   0,   0,   0,   0,   3,   198, 205, 155, 108, 217, 227, 12,  24,  48,  0,   0,   0,   0,   1,
        199, 155, 54,  205, 177, 224, 195, 6,   12,  0,   0,   0,   0,   6,   206, 216, 48,  193, 131, 0,   0,   0,   0,
        0,   0,   0,   0,   3,   141, 152, 24,  25,  177, 192, 0,   0,   0,   0,   0,   0,   96,  199, 198, 12,  48,  96,
        192, 240, 0,   0,   0,   0,   0,   0,   0,   6,   205, 155, 102, 217, 177, 224, 0,   0,   0,   0,   0,   0,   0,
        6,   205, 155, 28,  56,  96,  128, 0,   0,   0,   0,   0,   0,   0,   6,   108, 217, 235, 212, 249, 96,  0,   0,
        0,   0,   0,   0,   0,   6,   109, 142, 8,   56,  219, 48,  0,   0,   0,   0,   0,   0,   0,   6,   205, 155, 102,
        217, 177, 224, 195, 6,   56,  0,   0,   0,   0,   7,   193, 134, 24,  97,  131, 224, 0,   0,   0,   0,   0,   0,
        56,  241, 230, 205, 190, 109, 155, 48,  0,   0,   0,   0,   0,   0,   241, 179, 109, 158, 52,  205, 155, 224, 0,
        0,   0,   0,   0,   0,   113, 179, 12,  24,  96,  193, 177, 192, 0,   0,   0,   0,   0,   0,   241, 179, 108, 217,
        182, 205, 179, 192, 0,   0,   0,   0,   0,   0,   249, 131, 12,  30,  48,  193, 131, 224, 0,   0,   0,   0,   0,
        0,   249, 131, 12,  30,  48,  193, 131, 0,   0,   0,   0,   0,   0,   0,   113, 179, 12,  24,  110, 205, 177, 192,
        0,   0,   0,   0,   0,   0,   217, 179, 109, 159, 54,  217, 179, 96,  0,   0,   0,   0,   0,   0,   240, 193, 134,
        12,  24,  96,  195, 192, 0,   0,   0,   0,   0,   0,   120, 48,  96,  195, 6,   205, 177, 192, 0,   0,   0,   0,
        0,   0,   201, 179, 109, 158, 54,  205, 155, 48,  0,   0,   0,   0,   0,   0,   193, 131, 12,  24,  48,  193, 131,
        240, 0,   0,   0,   0,   0,   0,   137, 179, 238, 217, 179, 205, 155, 48,  0,   0,   0,   0,   0,   1,   155, 183,
        237, 217, 230, 205, 155, 48,  0,   0,   0,   0,   0,   0,   113, 179, 108, 217, 230, 205, 177, 192, 0,   0,   0,
        0,   0,   0,   241, 179, 108, 219, 60,  97,  131, 0,   0,   0,   0,   0,   0,   0,   113, 179, 108, 217, 230, 205,
        177, 240, 96,  0,   0,   0,   0,   0,   241, 179, 108, 223, 60,  205, 155, 48,  0,   0,   0,   0,   0,   0,   113,
        182, 12,  12,  12,  25,  177, 192, 0,   0,   0,   0,   0,   1,   248, 193, 134, 12,  24,  96,  193, 128, 0,   0,
        0,   0,   0,   0,   217, 182, 109, 155, 102, 217, 177, 192, 0,   0,   0,   0,   0,   1,   155, 54,  109, 155, 60,
        112, 193, 128, 0,   0,   0,   0,   0,   0,   217, 179, 108, 219, 62,  253, 178, 32,  0,   0,   0,   0,   0,   1,
        155, 50,  199, 12,  56,  217, 155, 48,  0,   0,   0,   0,   0,   1,   155, 54,  109, 158, 24,  48,  193, 128, 0,
        0,   0,   0,   0,   0,   248, 48,  195, 12,  48,  97,  131, 224, 0,   0,   0,   0,   0,   0,   96,  193, 134, 12,
        24,  0,   193, 128, 0,   0,   0,   0,   0,   217, 179, 96,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
        0,   1,   163, 79,  205, 52,  252, 209, 160, 0,   0,   0,   0,   0,   16,  243, 118, 134, 6,   14,  21,  217, 225,
        0,   0,   0,   0,   0,   1,   135, 134, 195, 12,  48,  217, 120, 96,  0,   0,   0,   0,   0,   0,   97,  163, 67,
        30,  110, 217, 177, 176, 0,   0,   0,   0,   0,   96,  193, 128, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
        0,   24,  97,  131, 12,  24,  48,  96,  192, 193, 129, 128, 0,   0,   0,   192, 193, 129, 131, 6,   12,  24,  96,
        195, 12,  0,   0,   0,   0,   0,   0,   6,   198, 63,  24,  216, 0,   0,   0,   0,   0,   0,   0,   0,   0,   1,
        131, 31,  24,  48,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   48,  97,  134, 0,   0,
        0,   0,   0,   0,   0,   0,   31,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
        96,  192, 0,   0,   0,   0,   0,   12,  24,  96,  195, 6,   24,  48,  193, 134, 12,  0,   0,   0,   0,   0,   0,
        1,   131, 0,   0,   48,  96,  0,   0,   0,   0,   0,   0,   0,   0,   1,   131, 0,   0,   48,  96,  195, 12,  0,
        0,   0,   0,   0,   0,   97,  134, 24,  48,  48,  96,  96,  0,   0,   0,   0,   0,   0,   0,   0,   15,  128, 124,
        0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   129, 131, 3,   6,   24,  97,  128, 0,   0,   0,   0,   0,   0,
        243, 48,  96,  195, 12,  0,   96,  192, 0,   0,   0,   0,   0,   0,   243, 54,  108, 219, 110, 221, 129, 240, 0,
        0,   0,   0,   0,   120, 193, 131, 12,  24,  48,  97,  131, 6,   15,  0,   0,   0,   0,   193, 131, 3,   6,   12,
        12,  24,  48,  48,  96,  192, 0,   0,   0,   120, 48,  96,  195, 6,   12,  24,  96,  193, 143, 0,   0,   0,   0,
        48,  97,  227, 205, 155, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   7,
        240, 0,   0,   0,   0,   96,  96,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   28,  96,  193, 134,
        56,  24,  48,  193, 131, 3,   128, 0,   0,   0,   48,  96,  193, 134, 12,  24,  48,  193, 131, 6,   0,   0,   0,
        0,   112, 48,  96,  195, 6,   7,   24,  48,  97,  142, 0,   0,   0,   0,   0,   0,   0,   12,  191, 76,  0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
    };
};
} // namespace epaperapi::fonts
