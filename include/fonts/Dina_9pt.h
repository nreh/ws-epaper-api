/**
 * This file was generated automatically using scripts/fontmaking/Images2FontHeaders.py
 *
 * Font: Dina
 * Font Size: 9pt
 * Generated On: 13 October 2024 @ 7:27 PM
 *
 * License:
 *
 * Copyright (c) 2005-2013 Joergen Ibsen
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

#pragma once

#include "AbstractFont.h"

#include <vector>

namespace epaperapi::fonts {
class Dina_9pt : public AbstractFont {
  private:
    const std::string charset =
        "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~ ";

  public:
    Dina_9pt() {}
    uint8_t GetFontSize() const override { return 9; }
    uint8_t GetHeight() const override { return 15; }
    std::string GetFontName() override { return "Dina"; }
    std::string GetCharacterSet() const override { return charset; }
    const uint8_t* GetBitmapData() const override { return bitmap.data(); }
    const uint8_t* GetCharacterWidths() const override { return charWidths.data(); }

  private:
    const std::vector<uint8_t> charWidths = {7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                             7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                             7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                             7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7};

    const std::vector<uint8_t> bitmap = {
        0,   0,   226, 36,  202, 149, 42,  100, 136, 224, 0,   0,   0,   0,   0,   0,   65,  133, 2,   4,   8,   16,  33,
        240, 0,   0,   0,   0,   0,   0,   226, 32,  65,  4,   16,  64,  129, 240, 0,   0,   0,   0,   0,   0,   226, 32,
        64,  134, 2,   4,   136, 224, 0,   0,   0,   0,   0,   0,   16,  97,  68,  137, 34,  126, 8,   16,  0,   0,   0,
        0,   0,   1,   242, 4,   8,   30,  2,   4,   136, 224, 0,   0,   0,   0,   0,   0,   97,  4,   8,   30,  34,  68,
        136, 224, 0,   0,   0,   0,   0,   1,   240, 32,  65,  2,   8,   16,  64,  128, 0,   0,   0,   0,   0,   0,   226,
        36,  72,  142, 34,  68,  136, 224, 0,   0,   0,   0,   0,   0,   226, 36,  72,  145, 30,  4,   16,  192, 0,   0,
        0,   0,   0,   0,   0,   3,   128, 129, 30,  68,  136, 240, 0,   0,   0,   0,   0,   129, 2,   7,   136, 145, 34,
        68,  137, 224, 0,   0,   0,   0,   0,   0,   0,   3,   136, 144, 32,  64,  136, 224, 0,   0,   0,   0,   0,   8,
        16,  35,  200, 145, 34,  68,  136, 240, 0,   0,   0,   0,   0,   0,   0,   3,   136, 145, 62,  64,  136, 224, 0,
        0,   0,   0,   0,   56,  129, 2,   15,  8,   16,  32,  64,  128, 0,   0,   0,   0,   0,   0,   0,   3,   200, 145,
        34,  68,  136, 240, 32,  71,  0,   0,   0,   129, 2,   7,   136, 145, 34,  68,  137, 16,  0,   0,   0,   0,   0,
        32,  64,  3,   2,   4,   8,   16,  32,  224, 0,   0,   0,   0,   0,   16,  32,  3,   129, 2,   4,   8,   16,  32,
        71,  0,   0,   0,   0,   129, 2,   4,   73,  20,  56,  72,  145, 16,  0,   0,   0,   0,   0,   96,  64,  129, 2,
        4,   8,   16,  32,  96,  0,   0,   0,   0,   0,   0,   0,   6,   138, 149, 42,  84,  169, 80,  0,   0,   0,   0,
        0,   0,   0,   7,   136, 145, 34,  68,  137, 16,  0,   0,   0,   0,   0,   0,   0,   3,   136, 145, 34,  68,  136,
        224, 0,   0,   0,   0,   0,   0,   0,   7,   136, 145, 34,  68,  137, 226, 4,   8,   0,   0,   0,   0,   0,   3,
        200, 145, 34,  68,  136, 240, 32,  64,  128, 0,   0,   0,   0,   5,   140, 144, 32,  64,  129, 0,   0,   0,   0,
        0,   0,   0,   0,   3,   136, 144, 28,  4,   136, 224, 0,   0,   0,   0,   0,   64,  129, 7,   132, 8,   16,  32,
        64,  112, 0,   0,   0,   0,   0,   0,   0,   4,   72,  145, 34,  68,  136, 240, 0,   0,   0,   0,   0,   0,   0,
        4,   72,  145, 20,  40,  32,  64,  0,   0,   0,   0,   0,   0,   0,   4,   72,  145, 42,  84,  80,  160, 0,   0,
        0,   0,   0,   0,   0,   4,   72,  138, 8,   40,  137, 16,  0,   0,   0,   0,   0,   0,   0,   4,   72,  145, 34,
        68,  136, 240, 32,  71,  0,   0,   0,   0,   0,   7,   192, 130, 8,   32,  129, 240, 0,   0,   0,   0,   0,   0,
        64,  130, 133, 10,  28,  68,  137, 16,  0,   0,   0,   0,   0,   1,   226, 36,  72,  158, 34,  68,  137, 224, 0,
        0,   0,   0,   0,   0,   226, 36,  8,   16,  32,  64,  136, 224, 0,   0,   0,   0,   0,   1,   194, 68,  72,  145,
        34,  68,  145, 192, 0,   0,   0,   0,   0,   1,   242, 4,   8,   30,  32,  64,  129, 240, 0,   0,   0,   0,   0,
        1,   242, 4,   8,   30,  32,  64,  129, 0,   0,   0,   0,   0,   0,   0,   226, 36,  8,   19,  34,  68,  136, 224,
        0,   0,   0,   0,   0,   1,   18,  36,  72,  159, 34,  68,  137, 16,  0,   0,   0,   0,   0,   0,   224, 129, 2,
        4,   8,   16,  32,  224, 0,   0,   0,   0,   0,   0,   112, 32,  64,  129, 2,   68,  136, 224, 0,   0,   0,   0,
        0,   1,   18,  36,  138, 28,  36,  72,  137, 16,  0,   0,   0,   0,   0,   1,   2,   4,   8,   16,  32,  64,  129,
        240, 0,   0,   0,   0,   0,   1,   19,  101, 74,  145, 34,  68,  137, 16,  0,   0,   0,   0,   0,   1,   19,  37,
        74,  147, 34,  68,  137, 16,  0,   0,   0,   0,   0,   0,   226, 36,  72,  145, 34,  68,  136, 224, 0,   0,   0,
        0,   0,   1,   226, 36,  72,  145, 60,  64,  129, 0,   0,   0,   0,   0,   0,   0,   226, 36,  72,  145, 34,  68,
        144, 208, 32,  0,   0,   0,   0,   1,   226, 36,  72,  158, 36,  68,  137, 16,  0,   0,   0,   0,   0,   0,   226,
        36,  8,   14,  2,   4,   136, 224, 0,   0,   0,   0,   0,   1,   240, 129, 2,   4,   8,   16,  32,  64,  0,   0,
        0,   0,   0,   1,   18,  36,  72,  145, 34,  68,  136, 224, 0,   0,   0,   0,   0,   1,   18,  36,  72,  138, 20,
        40,  32,  64,  0,   0,   0,   0,   0,   1,   18,  36,  72,  149, 42,  56,  80,  160, 0,   0,   0,   0,   0,   1,
        18,  34,  133, 4,   20,  40,  137, 16,  0,   0,   0,   0,   0,   1,   18,  36,  72,  138, 8,   16,  32,  64,  0,
        0,   0,   0,   0,   1,   240, 32,  129, 4,   16,  32,  129, 240, 0,   0,   0,   0,   0,   0,   64,  129, 2,   4,
        8,   0,   32,  64,  0,   0,   0,   0,   0,   80,  161, 64,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
        0,   1,   66,  143, 138, 20,  124, 80,  160, 0,   0,   0,   0,   0,   32,  226, 165, 10,  14,  10,  20,  168, 224,
        128, 0,   0,   0,   0,   0,   130, 130, 65,  4,   16,  72,  40,  32,  0,   0,   0,   0,   0,   32,  161, 65,  6,
        146, 36,  72,  144, 208, 0,   0,   0,   0,   0,   32,  64,  128, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
        0,   16,  64,  130, 4,   8,   16,  32,  64,  64,  128, 128, 0,   0,   0,   64,  64,  128, 129, 2,   4,   8,   16,
        64,  130, 0,   0,   0,   0,   0,   0,   2,   130, 31,  8,   40,  0,   0,   0,   0,   0,   0,   0,   0,   0,   1,
        2,   31,  8,   16,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   32,  64,  130, 0,   0,
        0,   0,   0,   0,   0,   0,   31,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
        32,  64,  0,   0,   0,   0,   0,   0,   16,  32,  129, 4,   8,   32,  65,  2,   0,   0,   0,   0,   0,   0,   0,
        1,   2,   0,   0,   16,  32,  0,   0,   0,   0,   0,   0,   0,   0,   1,   2,   0,   0,   16,  32,  65,  0,   0,
        0,   0,   0,   0,   16,  65,  4,   16,  16,  16,  16,  16,  0,   0,   0,   0,   0,   0,   0,   0,   15,  128, 62,
        0,   0,   0,   0,   0,   0,   0,   0,   1,   1,   1,   1,   1,   4,   16,  65,  0,   0,   0,   0,   0,   0,   0,
        226, 32,  65,  4,   8,   0,   32,  64,  0,   0,   0,   0,   0,   0,   226, 36,  202, 149, 42,  76,  128, 240, 0,
        0,   0,   0,   0,   112, 129, 2,   4,   8,   16,  32,  64,  129, 3,   128, 0,   0,   0,   1,   2,   2,   4,   4,
        8,   8,   16,  16,  32,  0,   0,   0,   0,   112, 32,  64,  129, 2,   4,   8,   16,  32,  67,  128, 0,   0,   0,
        32,  65,  66,  136, 145, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   7,
        240, 0,   0,   0,   0,   64,  64,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   24,  64,  129, 2,
        24,  8,   16,  32,  64,  128, 192, 0,   0,   0,   32,  64,  129, 2,   4,   8,   16,  32,  64,  129, 0,   0,   0,
        0,   192, 64,  129, 2,   3,   8,   16,  32,  64,  134, 0,   0,   0,   0,   0,   0,   0,   4,   149, 36,  0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
    };
};
} // namespace epaperapi::fonts
