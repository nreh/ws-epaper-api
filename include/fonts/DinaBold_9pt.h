/**
 * This file was generated automatically using scripts/fontmaking/Images2FontHeaders.py
 *
 * Font: Dina Bold
 * Font Size: 9pt
 * Generated On: 13 October 2024 @ 7:45 PM
 *
 * License:
 *
 * Copyright (c) 2005-2013 Joergen Ibsen
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

#pragma once

#include "AbstractFont.h"

#include <vector>

namespace epaperapi::fonts {
class DinaBold_9pt : public AbstractFont {
  private:
    const std::string charset =
        "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~ ";

  public:
    DinaBold_9pt() {}
    uint8_t GetFontSize() const override { return 9; }
    uint8_t GetHeight() const override { return 15; }
    std::string GetFontName() override { return "Dina Bold"; }
    std::string GetCharacterSet() const override { return charset; }
    const uint8_t* GetBitmapData() const override { return bitmap.data(); }
    const uint8_t* GetCharacterWidths() const override { return charWidths.data(); }

  private:
    const std::vector<uint8_t> charWidths = {7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                             7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                             7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                                             7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7};

    const std::vector<uint8_t> bitmap = {
        0,   1,   230, 109, 219, 187, 118, 205, 153, 224, 0,   0,   0,   0,   0,   0,   65,  135, 22,  12,  24,  48,  99,
        240, 0,   0,   0,   0,   0,   1,   230, 96,  195, 12,  48,  193, 131, 240, 0,   0,   0,   0,   0,   1,   230, 96,
        193, 142, 6,   13,  153, 224, 0,   0,   0,   0,   0,   0,   48,  227, 205, 179, 102, 254, 24,  48,  0,   0,   0,
        0,   0,   3,   246, 12,  24,  62,  6,   13,  153, 224, 0,   0,   0,   0,   0,   0,   227, 12,  24,  62,  102, 205,
        153, 224, 0,   0,   0,   0,   0,   3,   240, 96,  195, 6,   24,  48,  193, 128, 0,   0,   0,   0,   0,   1,   230,
        108, 217, 158, 102, 205, 153, 224, 0,   0,   0,   0,   0,   1,   230, 108, 217, 179, 62,  12,  49,  192, 0,   0,
        0,   0,   0,   0,   0,   7,   129, 131, 62,  205, 153, 240, 0,   0,   0,   0,   1,   131, 6,   15,  153, 179, 102,
        205, 155, 224, 0,   0,   0,   0,   0,   0,   0,   7,   153, 176, 96,  193, 153, 224, 0,   0,   0,   0,   0,   24,
        48,  103, 217, 179, 102, 205, 153, 240, 0,   0,   0,   0,   0,   0,   0,   7,   153, 179, 126, 193, 153, 224, 0,
        0,   0,   0,   0,   121, 131, 6,   31,  24,  48,  96,  193, 128, 0,   0,   0,   0,   0,   0,   0,   7,   217, 179,
        102, 205, 153, 240, 96,  193, 158, 0,   1,   131, 6,   15,  153, 179, 102, 205, 155, 48,  0,   0,   0,   0,   0,
        96,  192, 7,   6,   12,  24,  48,  97,  224, 0,   0,   0,   0,   0,   48,  96,  7,   131, 6,   12,  24,  48,  96,
        207, 0,   0,   0,   1,   131, 6,   12,  25,  182, 120, 241, 179, 48,  0,   0,   0,   0,   0,   224, 193, 131, 6,
        12,  24,  48,  96,  224, 0,   0,   0,   0,   0,   0,   0,   8,   89,  191, 126, 205, 155, 48,  0,   0,   0,   0,
        0,   0,   0,   15,  153, 179, 102, 205, 155, 48,  0,   0,   0,   0,   0,   0,   0,   7,   153, 179, 102, 205, 153,
        224, 0,   0,   0,   0,   0,   0,   0,   15,  153, 179, 102, 205, 155, 230, 12,  24,  48,  0,   0,   0,   0,   7,
        217, 179, 102, 205, 153, 240, 96,  193, 131, 0,   0,   0,   0,   13,  157, 176, 96,  193, 131, 0,   0,   0,   0,
        0,   0,   0,   0,   7,   153, 176, 60,  13,  153, 224, 0,   0,   0,   0,   0,   193, 131, 15,  140, 24,  48,  96,
        192, 240, 0,   0,   0,   0,   0,   0,   0,   12,  217, 179, 102, 205, 153, 240, 0,   0,   0,   0,   0,   0,   0,
        12,  217, 179, 60,  120, 96,  192, 0,   0,   0,   0,   0,   0,   0,   12,  217, 179, 126, 253, 154, 16,  0,   0,
        0,   0,   0,   0,   0,   12,  217, 158, 24,  121, 155, 48,  0,   0,   0,   0,   0,   0,   0,   12,  217, 179, 102,
        205, 153, 240, 96,  193, 158, 0,   0,   0,   0,   15,  193, 134, 24,  97,  131, 240, 0,   0,   0,   0,   0,   0,
        193, 135, 143, 51,  102, 253, 155, 48,  0,   0,   0,   0,   0,   3,   230, 108, 217, 190, 102, 205, 155, 224, 0,
        0,   0,   0,   0,   1,   230, 108, 24,  48,  96,  193, 153, 224, 0,   0,   0,   0,   0,   3,   198, 204, 217, 179,
        102, 205, 179, 192, 0,   0,   0,   0,   0,   3,   246, 12,  24,  62,  96,  193, 131, 240, 0,   0,   0,   0,   0,
        3,   246, 12,  24,  62,  96,  193, 131, 0,   0,   0,   0,   0,   0,   1,   230, 108, 24,  55,  102, 205, 153, 224,
        0,   0,   0,   0,   0,   3,   54,  108, 217, 191, 102, 205, 155, 48,  0,   0,   0,   0,   0,   1,   225, 131, 6,
        12,  24,  48,  97,  224, 0,   0,   0,   0,   0,   0,   112, 96,  193, 131, 6,   205, 153, 224, 0,   0,   0,   0,
        0,   3,   54,  108, 219, 60,  108, 205, 155, 48,  0,   0,   0,   0,   0,   3,   6,   12,  24,  48,  96,  193, 131,
        240, 0,   0,   0,   0,   0,   2,   22,  111, 223, 179, 102, 205, 155, 48,  0,   0,   0,   0,   0,   3,   55,  111,
        219, 179, 102, 205, 155, 48,  0,   0,   0,   0,   0,   1,   230, 108, 217, 179, 102, 205, 153, 224, 0,   0,   0,
        0,   0,   3,   230, 108, 217, 179, 124, 193, 131, 0,   0,   0,   0,   0,   0,   1,   230, 108, 217, 179, 102, 205,
        145, 240, 96,  0,   0,   0,   0,   3,   230, 108, 217, 190, 108, 205, 155, 48,  0,   0,   0,   0,   0,   1,   230,
        108, 24,  30,  6,   13,  153, 224, 0,   0,   0,   0,   0,   3,   241, 131, 6,   12,  24,  48,  96,  192, 0,   0,
        0,   0,   0,   3,   54,  108, 217, 179, 102, 205, 153, 224, 0,   0,   0,   0,   0,   3,   54,  108, 217, 179, 60,
        120, 96,  192, 0,   0,   0,   0,   0,   3,   54,  108, 217, 179, 126, 253, 154, 16,  0,   0,   0,   0,   0,   3,
        54,  108, 207, 12,  60,  205, 155, 48,  0,   0,   0,   0,   0,   3,   54,  108, 217, 158, 24,  48,  96,  192, 0,
        0,   0,   0,   0,   3,   240, 97,  134, 24,  48,  193, 131, 240, 0,   0,   0,   0,   0,   0,   193, 131, 6,   12,
        24,  0,   96,  192, 0,   0,   0,   0,   0,   217, 179, 96,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
        0,   3,   70,  159, 154, 52,  252, 209, 160, 0,   0,   0,   0,   0,   33,  230, 173, 30,  30,  30,  21,  169, 224,
        128, 0,   0,   0,   0,   1,   135, 134, 195, 12,  48,  217, 120, 96,  0,   0,   0,   0,   0,   97,  163, 67,  14,
        182, 108, 217, 177, 208, 0,   0,   0,   0,   0,   96,  193, 128, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
        0,   24,  96,  195, 6,   12,  24,  48,  96,  96,  192, 192, 0,   0,   0,   192, 193, 129, 131, 6,   12,  24,  48,
        193, 134, 0,   0,   0,   0,   0,   0,   12,  207, 63,  60,  204, 0,   0,   0,   0,   0,   0,   0,   0,   0,   3,
        6,   63,  24,  48,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   96,  193, 134, 0,   0,
        0,   0,   0,   0,   0,   0,   63,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
        96,  192, 0,   0,   0,   0,   0,   0,   16,  96,  195, 6,   24,  48,  193, 130, 0,   0,   0,   0,   0,   0,   0,
        3,   6,   0,   0,   48,  96,  0,   0,   0,   0,   0,   0,   0,   0,   3,   6,   0,   0,   48,  96,  195, 0,   0,
        0,   0,   0,   0,   48,  195, 12,  48,  48,  48,  48,  48,  0,   0,   0,   0,   0,   0,   0,   0,   31,  128, 126,
        0,   0,   0,   0,   0,   0,   0,   0,   3,   3,   3,   3,   3,   12,  48,  195, 0,   0,   0,   0,   0,   0,   1,
        230, 96,  193, 134, 24,  0,   96,  192, 0,   0,   0,   0,   0,   1,   230, 108, 219, 183, 110, 205, 129, 240, 0,
        0,   0,   0,   0,   120, 193, 131, 6,   12,  24,  48,  96,  193, 131, 192, 0,   0,   0,   1,   3,   6,   6,   12,
        12,  24,  24,  48,  32,  0,   0,   0,   0,   240, 96,  193, 131, 6,   12,  24,  48,  96,  199, 128, 0,   0,   0,
        96,  195, 199, 153, 179, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   7,
        240, 0,   0,   0,   0,   96,  96,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   56,  193, 131, 6,
        56,  24,  48,  96,  193, 129, 192, 0,   0,   0,   96,  193, 131, 6,   12,  24,  48,  96,  193, 131, 0,   0,   0,
        1,   192, 193, 131, 6,   7,   24,  48,  96,  193, 142, 0,   0,   0,   0,   0,   0,   0,   12,  191, 76,  0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
    };
};
} // namespace epaperapi::fonts
