/**
 * This file was generated automatically using scripts/fontmaking/Images2FontHeaders.py
 *
 * Font: Dina
 * Font Size: 10pt
 * Generated On: 13 October 2024 @ 7:27 PM
 *
 * License:
 *
 * Copyright (c) 2005-2013 Joergen Ibsen
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

#pragma once

#include "AbstractFont.h"

#include <vector>

namespace epaperapi::fonts {
class Dina_10pt : public AbstractFont {
  private:
    const std::string charset =
        "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~ ";

  public:
    Dina_10pt() {}
    uint8_t GetFontSize() const override { return 10; }
    uint8_t GetHeight() const override { return 16; }
    std::string GetFontName() override { return "Dina"; }
    std::string GetCharacterSet() const override { return charset; }
    const uint8_t* GetBitmapData() const override { return bitmap.data(); }
    const uint8_t* GetCharacterWidths() const override { return charWidths.data(); }

  private:
    const std::vector<uint8_t> charWidths = {8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
                                             8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
                                             8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
                                             8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8};

    const std::vector<uint8_t> bitmap = {
        0,   0,   0,   60,  66,  70,  74,  82,  98, 66, 66,  60,  0,  0,   0,   0,   0,   0,  0,   8,   24,  40,  8,   8,
        8,   8,   8,   62,  0,   0,   0,   0,   0,  0,  0,   60,  66, 2,   4,   8,   16,  32, 64,  126, 0,   0,   0,   0,
        0,   0,   0,   60,  66,  2,   2,   28,  2,  2,  66,  60,  0,  0,   0,   0,   0,   0,  0,   4,   12,  20,  36,  68,
        126, 4,   4,   4,   0,   0,   0,   0,   0,  0,  0,   126, 64, 64,  64,  124, 2,   2,  66,  60,  0,   0,   0,   0,
        0,   0,   0,   28,  32,  64,  64,  124, 66, 66, 66,  60,  0,  0,   0,   0,   0,   0,  0,   126, 2,   2,   4,   4,
        8,   8,   16,  16,  0,   0,   0,   0,   0,  0,  0,   60,  66, 66,  66,  60,  66,  66, 66,  60,  0,   0,   0,   0,
        0,   0,   0,   60,  66,  66,  66,  62,  2,  2,  4,   56,  0,  0,   0,   0,   0,   0,  0,   0,   0,   60,  2,   2,
        62,  66,  66,  62,  0,   0,   0,   0,   0,  0,  64,  64,  64, 124, 66,  66,  66,  66, 66,  124, 0,   0,   0,   0,
        0,   0,   0,   0,   0,   60,  66,  64,  64, 64, 66,  60,  0,  0,   0,   0,   0,   0,  2,   2,   2,   62,  66,  66,
        66,  66,  66,  62,  0,   0,   0,   0,   0,  0,  0,   0,   0,  60,  66,  66,  126, 64, 66,  60,  0,   0,   0,   0,
        0,   0,   14,  16,  16,  60,  16,  16,  16, 16, 16,  16,  0,  0,   0,   0,   0,   0,  0,   0,   0,   62,  66,  66,
        66,  66,  66,  62,  2,   2,   2,   60,  0,  0,  64,  64,  64, 124, 66,  66,  66,  66, 66,  66,  0,   0,   0,   0,
        0,   8,   8,   0,   0,   24,  8,   8,   8,  8,  8,   28,  0,  0,   0,   0,   0,   8,  8,   0,   0,   56,  8,   8,
        8,   8,   8,   8,   8,   112, 0,   0,   0,  0,  64,  64,  64, 66,  68,  72,  120, 68, 68,  66,  0,   0,   0,   0,
        0,   0,   24,  8,   8,   8,   8,   8,   8,  8,  8,   12,  0,  0,   0,   0,   0,   0,  0,   0,   0,   236, 146, 146,
        146, 146, 146, 146, 0,   0,   0,   0,   0,  0,  0,   0,   0,  124, 66,  66,  66,  66, 66,  66,  0,   0,   0,   0,
        0,   0,   0,   0,   0,   60,  66,  66,  66, 66, 66,  60,  0,  0,   0,   0,   0,   0,  0,   0,   0,   124, 66,  66,
        66,  66,  66,  124, 64,  64,  64,  64,  0,  0,  0,   0,   0,  62,  66,  66,  66,  66, 66,  62,  2,   2,   2,   2,
        0,   0,   0,   0,   0,   92,  98,  64,  64, 64, 64,  64,  0,  0,   0,   0,   0,   0,  0,   0,   0,   60,  66,  64,
        60,  2,   66,  60,  0,   0,   0,   0,   0,  0,  32,  32,  32, 120, 32,  32,  32,  32, 32,  30,  0,   0,   0,   0,
        0,   0,   0,   0,   0,   66,  66,  66,  66, 66, 66,  62,  0,  0,   0,   0,   0,   0,  0,   0,   0,   68,  68,  68,
        40,  40,  16,  16,  0,   0,   0,   0,   0,  0,  0,   0,   0,  130, 130, 146, 84,  84, 108, 40,  0,   0,   0,   0,
        0,   0,   0,   0,   0,   66,  36,  36,  24, 36, 36,  66,  0,  0,   0,   0,   0,   0,  0,   0,   0,   66,  66,  66,
        66,  66,  66,  62,  2,   2,   2,   60,  0,  0,  0,   0,   0,  126, 4,   8,   16,  32, 64,  126, 0,   0,   0,   0,
        0,   0,   0,   24,  24,  36,  36,  60,  66, 66, 66,  66,  0,  0,   0,   0,   0,   0,  0,   124, 66,  66,  66,  124,
        66,  66,  66,  124, 0,   0,   0,   0,   0,  0,  0,   60,  66, 64,  64,  64,  64,  64, 66,  60,  0,   0,   0,   0,
        0,   0,   0,   120, 68,  66,  66,  66,  66, 66, 68,  120, 0,  0,   0,   0,   0,   0,  0,   126, 64,  64,  64,  124,
        64,  64,  64,  126, 0,   0,   0,   0,   0,  0,  0,   126, 64, 64,  64,  124, 64,  64, 64,  64,  0,   0,   0,   0,
        0,   0,   0,   60,  66,  64,  64,  78,  66, 66, 66,  60,  0,  0,   0,   0,   0,   0,  0,   66,  66,  66,  66,  126,
        66,  66,  66,  66,  0,   0,   0,   0,   0,  0,  0,   62,  8,  8,   8,   8,   8,   8,  8,   62,  0,   0,   0,   0,
        0,   0,   0,   30,  2,   2,   2,   2,   2,  66, 66,  60,  0,  0,   0,   0,   0,   0,  0,   66,  66,  68,  72,  120,
        68,  68,  66,  66,  0,   0,   0,   0,   0,  0,  0,   64,  64, 64,  64,  64,  64,  64, 64,  126, 0,   0,   0,   0,
        0,   0,   0,   66,  102, 90,  90,  66,  66, 66, 66,  66,  0,  0,   0,   0,   0,   0,  0,   66,  98,  82,  74,  70,
        66,  66,  66,  66,  0,   0,   0,   0,   0,  0,  0,   60,  66, 66,  66,  66,  66,  66, 66,  60,  0,   0,   0,   0,
        0,   0,   0,   124, 66,  66,  66,  124, 64, 64, 64,  64,  0,  0,   0,   0,   0,   0,  0,   60,  66,  66,  66,  66,
        66,  66,  68,  58,  2,   0,   0,   0,   0,  0,  0,   124, 66, 66,  66,  124, 68,  66, 66,  66,  0,   0,   0,   0,
        0,   0,   0,   60,  66,  64,  64,  60,  2,  2,  66,  60,  0,  0,   0,   0,   0,   0,  0,   124, 16,  16,  16,  16,
        16,  16,  16,  16,  0,   0,   0,   0,   0,  0,  0,   66,  66, 66,  66,  66,  66,  66, 66,  60,  0,   0,   0,   0,
        0,   0,   0,   68,  68,  68,  68,  40,  40, 40, 16,  16,  0,  0,   0,   0,   0,   0,  0,   130, 130, 130, 146, 84,
        84,  108, 40,  40,  0,   0,   0,   0,   0,  0,  0,   66,  66, 36,  36,  24,  36,  36, 66,  66,  0,   0,   0,   0,
        0,   0,   0,   130, 130, 130, 68,  40,  16, 16, 16,  16,  0,  0,   0,   0,   0,   0,  0,   126, 4,   8,   16,  16,
        32,  32,  64,  126, 0,   0,   0,   0,   0,  0,  16,  16,  16, 16,  16,  16,  0,   0,  16,  16,  0,   0,   0,   0,
        0,   36,  36,  36,  0,   0,   0,   0,   0,  0,  0,   0,   0,  0,   0,   0,   0,   0,  0,   0,   36,  36,  126, 36,
        36,  126, 36,  36,  0,   0,   0,   0,   0,  0,  16,  56,  84, 80,  80,  56,  20,  20, 84,  56,  16,  0,   0,   0,
        0,   0,   0,   96,  146, 148, 104, 16,  44, 82, 146, 12,  0,  0,   0,   0,   0,   0,  24,  36,  36,  40,  16,  42,
        68,  68,  68,  58,  0,   0,   0,   0,   0,  16, 16,  16,  0,  0,   0,   0,   0,   0,  0,   0,   0,   0,   0,   0,
        0,   8,   16,  16,  32,  32,  32,  32,  32, 32, 32,  16,  16, 8,   0,   0,   0,   32, 16,  16,  8,   8,   8,   8,
        8,   8,   8,   16,  16,  32,  0,   0,   0,  0,  0,   0,   0,  36,  24,  126, 24,  36, 0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   16,  16,  124, 16, 16, 0,   0,   0,  0,   0,   0,   0,   0,  0,   0,   0,   0,   0,   0,
        0,   0,   24,  24,  16,  48,  0,   0,   0,  0,  0,   0,   0,  0,   0,   126, 0,   0,  0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,   0,  0,  24,  24,  0,  0,   0,   0,   0,   2,  2,   4,   4,   8,   8,   16,
        16,  32,  32,  64,  64,  0,   0,   0,   0,  0,  0,   0,   0,  24,  24,  0,   0,   0,  24,  24,  0,   0,   0,   0,
        0,   0,   0,   0,   0,   24,  24,  0,   0,  0,  24,  24,  16, 48,  0,   0,   0,   0,  0,   2,   4,   8,   16,  32,
        16,  8,   4,   2,   0,   0,   0,   0,   0,  0,  0,   0,   0,  0,   126, 0,   126, 0,  0,   0,   0,   0,   0,   0,
        0,   0,   0,   64,  32,  16,  8,   4,   8,  16, 32,  64,  0,  0,   0,   0,   0,   0,  60,  66,  2,   2,   12,  16,
        16,  0,   16,  16,  0,   0,   0,   0,   0,  0,  0,   60,  66, 66,  78,  82,  82,  78, 64,  62,  0,   0,   0,   0,
        0,   60,  32,  32,  32,  32,  32,  32,  32, 32, 32,  32,  32, 60,  0,   0,   0,   64, 64,  32,  32,  16,  16,  8,
        8,   4,   4,   2,   2,   0,   0,   0,   0,  60, 4,   4,   4,  4,   4,   4,   4,   4,  4,   4,   4,   60,  0,   0,
        0,   0,   16,  16,  40,  40,  68,  68,  0,  0,  0,   0,   0,  0,   0,   0,   0,   0,  0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   255, 0,   0,   0,   0,  24, 8,   4,   0,  0,   0,   0,   0,   0,  0,   0,   0,   0,   0,   0,
        0,   12,  16,  16,  16,  16,  16,  224, 16, 16, 16,  16,  16, 12,  0,   0,   0,   16, 16,  16,  16,  16,  16,  16,
        16,  16,  16,  16,  16,  16,  0,   0,   0,  96, 16,  16,  16, 16,  16,  14,  16,  16, 16,  16,  16,  96,  0,   0,
        0,   0,   0,   0,   0,   0,   0,   50,  76, 0,  0,   0,   0,  0,   0,   0,   0,   0,  0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0
    };
};
} // namespace epaperapi::fonts
